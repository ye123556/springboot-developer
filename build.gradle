plugins { // 프로젝트에 사용할 스프링 부트와 스프링 플러그인 의존성 관리
    id 'java'
    id 'org.springframework.boot' version '3.0.2'
    id 'io.spring.dependency-management' version '1.1.0'
}

// 프로젝트 생성할 때 기입한 group 값 기본 세팅
group = 'com.itschool'
// 프로젝트 버전 기입
version = '1.0-SNAPSHOT'
// 컴파일 시 자바 버전 17
sourceCompatibility = '17'

// 의존성을 받는 저장소
repositories {
    mavenCentral() // maven repository
}

// 프로젝트를 개발하며 필요한 의존성을 관리
dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
    runtimeOnly 'com.h2database:h2' // 인메모리 데이터베이스
    compileOnly 'org.projectlombok:lombok' // 롬복
    annotationProcessor 'org.projectlombok:lombok'
    // Spring Boot DevTools는 개발 편의성을 높이기 위해 제공되는 도구. 자동 재시작, 라이브 리로드, 설정 간소화
    developmentOnly "org.springframework.boot:spring-boot-devtools"
}

// 개발 환경에서만 필요한 라이브러리를 지정하는 사용자 정의 구성(Configuration)
// 즉, 개발 모드에서는 spring-boot-devtools를 사용할 수 있지만, 프로덕션 환경에서는 포함되지 않음
configurations {
    developmentOnly
    runtimeClasspath { // developmentOnly로 지정한 라이브러리를 런타임 클래스 경로에 추가
        extendsFrom developmentOnly
    }

}

// Gradle에서 JUnit 5(JUnit Jupiter) 테스트를 실행하도록 설정하는 코드
test {
    useJUnitPlatform()
}